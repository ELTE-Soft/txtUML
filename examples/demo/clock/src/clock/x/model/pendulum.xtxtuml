package clock.x.model;

import clock.x.model.associations.TimerOfPendulum;
import clock.x.model.interfaces.TickIfc;
import clock.x.model.signals.Tick;
import hu.elte.txtuml.api.stdlib.timers.Timer;

class Pendulum {

	private int unit;

	public Pendulum() {
		this.unit = 1000; // init expressions are not yet supported
	}

	port OutTickPort {
		required TickIfc;
	}

	initial Init;
	state Working {
		entry {
			send new Tick() to this->(OutTickPort);
		}
	}

	transition Initialize {
		from Init;
		to Working;
		effect {
			Timer timer = Timer.start(new Tick(), this, unit);
			link(TimerOfPendulum.timer, timer, TimerOfPendulum.pendulum, this);
		}
	}

	transition DoTick {
		from Working;
		to Working;
		trigger Tick;
		effect {
			this->(TimerOfPendulum.timer).selectAny().reset(unit);
		}
	}

}

